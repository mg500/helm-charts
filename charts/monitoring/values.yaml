grafanaProvisioning:
  enabled: true
  dashboards:
    enabled: true
    label: grafana_dashboard
    labelValue: "1"
    directory: dashboards
    ## Set the folder in which the dashboards will be stored ("General" is not possible)
    grafanaDefaultFolder: Custom
    ## Transfer the folder structure from your directory to grafana
    ## grafanaDefaultFolder does not matter in this case
    transferFolderStructure: true

alertmanagerProvisioning:
  enabled: true
  directory: alerts

alertmanagerConfig:
  enabled: true
  name: alertmanager-config

  mailGroups:
    - name: mail-1
      to: "maxgoeb@gmx.de"
      matchers:
        - matchType: "="
          name: severity
          value: critical

kube-prometheus-stack:
  ## Create default rules for monitoring the cluster
  ##
  defaultRules:
    create: false
    rules:
      alertmanager: true
      etcd: true
      configReloaders: true
      general: true
      k8s: true
      kubeApiserverAvailability: true
      kubeApiserverBurnrate: true
      kubeApiserverHistogram: true
      kubeApiserverSlos: true
      kubeControllerManager: true
      kubelet: true
      kubeProxy: true
      kubePrometheusGeneral: true
      kubePrometheusNodeRecording: true
      kubernetesApps: true
      kubernetesResources: true
      kubernetesStorage: true
      kubernetesSystem: true
      kubeSchedulerAlerting: true
      kubeSchedulerRecording: true
      kubeStateMetrics: true
      network: true
      node: true
      nodeExporterAlerting: true
      nodeExporterRecording: true
      prometheus: true
      prometheusOperator: true
      windows: true

  alertmanager:
    enabled: true
    ingress:
      enabled: false
    alertmanagerSpec:
      logLevel: debug
      alertmanagerConfigNamespaceSelector: {}
      alertmanagerConfigSelector:
        matchLabels:
          resource: prometheus
      ## Ggf wieder Ã¤ndern
      alertmanagerConfiguration:
        name: alertmanager-config
        global:
          smtp:
            authPassword:
              name: alertmanager-mail
              key: password
            authUsername: "alerting-kubernetes@gmx.de"
            from: "alerting-kubernetes@gmx.de"
            hello: "mail.gmx.net"
            smartHost: 
              host: "mail.gmx.net"
              port: "587"

  grafana:
    enabled: true
    defaultDashboardsEnabled: true
    defaultDashboardsTimezone: Europe/Berlin
    adminPassword: admin
    ingress:
      enabled: false
    sidecar:
      dashboards:
        enabled: true
        label: grafana_dashboard
        labelValue: "1"
        searchNamespace: monitoring
        provider:
          allowUiUpdates: false
          foldersFromFilesStructure: true
        folderAnnotation: grafana_dashboard_folder
      # datasources:
      #   alertmanager:
      #     enabled: true
      #     uid: alertmanager
      #     handleGrafanaManagedAlerts: false
      #     implementation: prometheus

  prometheusOperator:
    enabled: true

  prometheus:
    enabled: true
    prometheusSpec:
      ruleSelector:
        matchLabels:
          release: monitoring
      serviceMonitorSelectorNilUsesHelmValues: false
      serviceMonitorSelector:
        matchLabels:
          release: monitoring
      serviceMonitorNamespaceSelector: {}
      # scrapeConfigSelectorNilUsesHelmValues: false
      # scrapeConfigSelector:
      #   matchLabels:
      #       release: monitoring
      # scrapeConfigNamespaceSelector: {}

      additionalScrapeConfigs:
      - job_name: "fritzbox_exporter_fd_temp"
        static_configs:
          - targets: ["10.10.10.100:10120"]

  thanosRuler:
    enabled: false

  ## Scraping

  kubeApiServer:
    enabled: true

  kubelet:
    enabled: true

  kubeControllerManager:
    enabled: true

  coreDns:
    enabled: true

  kubeDns:
    enabled: false

  kubeEtcd:
    enabled: true

  kubeScheduler:
    enabled: true

  kubeProxy:
    enabled: true

  kubeStateMetrics:
    enabled: true

  nodeExporter:
    enabled: true
