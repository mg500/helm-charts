grafanaProvisioning:
  enabled: true

  dashboards:
    enabled: true
    label: grafana_dashboard
    labelValue: "1"
    directory: dashboards
    grafanaDefaultFolder: temp
    transferFolderStructure: true
    
  
  # alerts:
  #   enabled: true

  #   users:
  #   - id: mg123456
  #     email: max@mail.de
    
  #   alerts:
  #   - name: test-alert
  #     owner: mg123456
  #     enabled: true


kube-prometheus-stack:

  alertmanager:
    enabled: true
    ingress:
      enabled: false

  grafana:
    enabled: true
    defaultDashboardsEnabled: true
    defaultDashboardsTimezone: Europe/Berlin
    adminPassword: admin
    ingress:
      enabled: false
    sidecar:
      dashboards:
        enabled: true
        label: grafana_dashboard
        labelValue: "1"
        searchNamespace: monitoring
        provider:
          allowUiUpdates: false
          foldersFromFilesStructure: true
        folderAnnotation: grafana_dashboard_folder
          

  prometheusOperator:
    enabled: true
    # namespaces: {}
    # # releaseNamespace: true
    # # additional:
    # # - kube-system

    # ## Namespaces not to scope the interaction of the Prometheus Operator (deny list).
    # ##
    # denyNamespaces: []

    # ## Filter namespaces to look for prometheus-operator custom resources
    # ##
    # alertmanagerInstanceNamespaces: []
    # alertmanagerConfigNamespaces: []
    # prometheusInstanceNamespaces: []
    # thanosRulerInstanceNamespaces: []

  prometheus:
    enabled: true
    prometheusSpec:
      serviceMonitorSelectorNilUsesHelmValues: false

      # DEFAULT #
      # serviceMonitorSelector:
      #   matchLabels:
      #     release: monitoring


      serviceMonitorNamespaceSelector: {}
      # serviceMonitorNamespaceSelector:
      #  matchLabels:
      #    name: argocd








      # serviceMonitorSelectorNilUsesHelmValues: false
      # ## Namespaces to be selected for ServiceMonitor discovery.
      # ##
      # serviceMonitorNamespaceSelector: {}
      # ## Example which selects ServiceMonitors in namespaces with label "prometheus" set to "somelabel"
      # # serviceMonitorNamespaceSelector:
      # #   matchLabels:
      # #     prometheus: somelabel
      # serviceMonitorNamespaceSelector:
      #   matchLabels:
      #     argocd: "true"

      # serviceMonitorNamespaceSelector: {}
        # matchLabels:
        #   prometheus: somelabel

      # serviceMonitorSelector: {}
      ## Example which selects ServiceMonitors with label "prometheus" set to "somelabel"
      # serviceMonitorSelector:
      #   matchLabels:
      #     prometheus: somelabel


      additionalScrapeConfigs:
      - job_name: 'fritzbox_exporter_fd'
        static_configs:
        - targets: ['10.10.10.100:10120']

    #   additionalScrapeConfigsSecret: 
    #     enabled: true
    #     name: additional-scrape-configs
    #     key: prometheus-additional.yaml



  thanosRuler:
    enabled: false


  # Scraping

  kubeApiServer:
    enabled: true
 
  kubelet:
    enabled: true
    
  kubeControllerManager:
    enabled: true

  coreDns:
    enabled: true
  
  kubeDns:
    enabled: false
    
  kubeEtcd:
    enabled: true

  kubeScheduler:
    enabled: true

  kubeProxy:
    enabled: true

  kubeStateMetrics:
    enabled: true

  nodeExporter:
    enabled: true
    operatingSystems:
      linux:
        enabled: true
      darwin:
        enabled: false
